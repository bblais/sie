%matplotlib inline
from pylab import *
from sie.mcmc import StatsModel

xy1="""
X	Y
10	8.04
8	6.95
13	7.58
9	8.81
11	8.33
14	9.96
6	7.24
4	4.26
12	10.84
7	4.82
5	5.68
"""
xy=xy1
x,y=array([_.split() for _ in xy.strip().split('\n')[1:]],dtype=float).T
x,y

model=StatsModel()
model.add_data(x=x,y=y)
model.add("m ~ Normal(0,10)")
model.add("b ~ Normal(0,10)")
model.add("σ ~ Jeffreys()")
model.add("res ~ Normal(m*x+b-y,σ,sum=True)")
model.initialize()
model

print(model.make_func())

model.run_mcmc(800,repeat=3)
model.plot_chains()

self=model
args=[key for key in self.parameters if len(self.parameters[key])==1]
result={}
for key in args:
    s=self.slices.__getattribute__(key)
    sub_sample=self.samples[:,s]
    result[key]=np.percentile(sub_sample,[16,50,84],axis=0)

result



model=StatsModel()
model.add_data(x=x,y=y)
model.add("m ~ Normal(0,10)")
model.add("b ~ Normal(0,10)")
model.add("σ ~ Jeffreys()")
model.add("res ~ Normal(m*x+b-y,σ)")   # this doesn't work yet
model.initialize()
model

print(model.make_func())

model.run_mcmc(800,repeat=3)
model.plot_chains()


